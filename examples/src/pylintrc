[MESSAGE CONTROL]
# Disabling messages that either we don't care about we intentionally break.
#
# C0103 : invalid-name (we prefer long, descriptive, names for examples)
# E1101 : no-member (breaks with attrs)
# R0201 : no-self-use (interesting to keep in mind for later refactoring, but not blocking)
# R0801 : duplicate-code (some examples may be similar)
# R0903 : too-few-public-methods (does not allow value stores)
# R0914 : too-many-locals (examples may sometimes have more locals defined for clarity than would be appropriate in code)
# R1705 : no-else-return (we omit this on purpose for brevity where it would add no value)
# W0201 : attribute-defined-outside-init (breaks with attrs_post_init)
# W0223 : abstract-method (throws false positives on io.BaseIO grandchildren)
# W0621 : redefined-outer-name (we do this on purpose in multiple places)
disable = C0103, E1101, R0201, R0801, R0903, R0914, R1705, W0201, W0223, W0621

[BASIC]
# Allow function names up to 50 characters
function-rgx = [a-z_][a-z0-9_]{2,50}$
# Allow method names up to 50 characters
method-rgx = [a-z_][a-z0-9_]{2,50}$
# Allow class attribute names up to 50 characters
# Whitelist class attribute names: iv
class-attribute-rgx = (([A-Za-z_][A-Za-z0-9_]{2,50}|(__.*__))$)|(^iv$)
# Whitelist attribute names: iv
attr-rgx = ([a-z_][a-z0-9_]{2,30}$)|(^iv$)
# Whitelist argument names: iv, b
argument-rgx = ([a-z_][a-z0-9_]{2,30}$)|(^iv$)|(^b$)
# Whitelist variable names: iv, b, _b, x, y, r, s
variable-rgx = ([a-z_][a-z0-9_]{2,30}$)|(^iv$)|(^b$)|(^_b$)|(^x$)|(^y$)|(^r$)|(^s$)

[VARIABLES]
additional-builtins = raw_input

[DESIGN]
max-args = 10

[FORMAT]
max-line-length = 120

[REPORTS]
msg-template = {path}:{line}: [{msg_id}({symbol}), {obj}] {msg}

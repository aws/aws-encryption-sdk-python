[wheel]
universal = 1

[metadata]
license_file = LICENSE

[coverage:run]
branch = True

[coverage:report]
show_missing = True

[tool:pytest]
log_level = DEBUG
markers =
    local: superset of unit and functional (does not require network access)
    unit: mark test as a unit test (does not require network access)
    functional: mark test as a functional test (does not require network access)
    integ: mark a test as an integration test (requires network access)
    accept: mark a test as an acceptance test (requires network access)
    examples: mark a test as an examples test (requires network access)

# Flake8 Configuration
[flake8]
max_complexity = 10
max_line_length = 120
import_order_style = google
application_import_names = aws_encryption_sdk
builtins = raw_input
ignore =
    # Ignoring D205 and D400 because of false positives
    D205, D400,
    # Ignoring D401 pending discussion of imperative mood
    D401,
    # Ignoring W503 : line break before binary operator
    W503,
    # E203 is not PEP8 compliant https://github.com/ambv/black#slices
    E203,
    # W503 is not PEP8 compliant https://github.com/ambv/black#line-breaks--binary-operators
    W503

# Doc8 Configuration
[doc8]
max-line-length = 120

[isort]
line_length = 120
# https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
combine_as_imports = True
not_skip = __init__.py
known_first_party = aws_encryption_sdk
known_third_party = attr,awacs,aws_encryption_sdk_decrypt_oracle,awses_test_vectors,boto3,botocore,chalice,cryptography,integration_test_utils,mock,moto,pytest,pytest_mock,requests,setuptools,six,troposphere,wrapt

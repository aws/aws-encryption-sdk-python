version: 0.2

env:
  variables:
    AWS_ENCRYPTION_SDK_PYTHON_INTEGRATION_TEST_AWS_KMS_KEY_ID: >-
      arn:aws:kms:us-west-2:658956600833:key/b3537ef1-d8dc-4780-9f5a-55776cbb2f7f
    AWS_ENCRYPTION_SDK_PYTHON_INTEGRATION_TEST_AWS_KMS_KEY_ID_2: >-
      arn:aws:kms:eu-central-1:658956600833:key/75414c93-5285-4b57-99c9-30c1cf0a22c2
    AWS_ENCRYPTION_SDK_PYTHON_INTEGRATION_TEST_AWS_KMS_MRK_KEY_ID_1: >-
      arn:aws:kms:us-west-2:658956600833:key/mrk-80bd8ecdcd4342aebd84b7dc9da498a7
    AWS_ENCRYPTION_SDK_PYTHON_INTEGRATION_TEST_AWS_KMS_MRK_KEY_ID_2: >-
      arn:aws:kms:us-east-1:658956600833:key/mrk-80bd8ecdcd4342aebd84b7dc9da498a7
    GENERATE_OUTPUT_DIR: >-
      $CODEBUILD_SRC_DIR/generated_vectors/


phases:
  install:
    runtime-versions:
      python: 3.7
    commands:
      - n 16
      # Install the Javascript ESDK run test vectors
      - npm install -g @aws-crypto/integration-node

  pre_build:
    commands:
      # Assume Role to access non-prod resources
      - TMP_ROLE=$(aws sts assume-role --role-arn "arn:aws:iam::370957321024:role/GitHub-CI-Public-ESDK-Java-Role-us-west-2" --role-session-name "CB-TestVectorResources")
      - export TMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TMP_ROLE}" | jq -r '.Credentials.SessionToken')
      - aws sts get-caller-identity
      - cd $CODEBUILD_SRC_DIR

      # Download generated vectors
      # TODO rewrite URL
      aws s3 cp s3://generated-vectors-artifacts-bucket/GeneratedVectors/py37_generate_decrypt_vectors/test_vector_handlers/37_master.zip 37_master.zip
  build:
    commands:
      # Decrypt generated vectors with Javascript ESDK
      - integration-node decrypt -v 37_master.zip
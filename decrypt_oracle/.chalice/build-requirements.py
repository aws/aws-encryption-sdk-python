"""
Intended to be run after building the package locally,
this helper tool overwrites the "requirements.txt" file that Chalice uses.
This is necessary to work around how Chalice handles package source.
"""
import os

BASE = os.path.join(os.path.abspath(os.path.dirname(__file__)), '..')


def main():
    """Write the requirements file for Chalice to use."""
    with open(os.path.join(BASE, 'requirements.txt'), 'wb') as requirements:
        requirements.write(b'# Requirements for Chalice packager.' + os.linesep.encode('utf-8'))
        requirements.write(b'# Autogenerated. Do not hand-edit.' + os.linesep.encode('utf-8'))

        dist_dir = os.path.join(BASE, 'dist')
        for found_file in os.listdir(dist_dir):
            full_path = os.path.join(dist_dir, found_file)
            if os.path.isfile(full_path) and found_file.endswith('.whl'):
                requirements.write(full_path.encode('utf-8') + os.linesep.encode('utf-8'))


if __name__ == '__main__':
    main()

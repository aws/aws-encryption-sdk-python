[tox]
envlist =
    py27, py34, py35, py36,
    bandit, doc8, readme,
    flake8, pylint,
    flake8-tests, pylint-tests,
    examples,
    flake8-examples, pylint-examples

# Additional environments:
# vulture :: Runs vulture. Prone to false-positives.
# linters :: Runs all linters over all source code.
# linters-tests :: Runs all linters over all tests.
# linters-examples :: Runs all linters over all examples and examples tests.

[testenv]
passenv = AWS_ENCRYPTION_SDK_PYTHON_INTEGRATION_TEST_CONTROL
sitepackages = False
deps =
    mock
    pytest
    pytest-cov
    pytest-mock
    coverage
commands =
    coverage run -m pytest \
        --cov aws_encryption_sdk \
        {posargs}

# Examples
[testenv:examples]
basepython = python3
commands =
    coverage run -m pytest \
        examples/test/

# Linters
[testenv:flake8]
basepython = python3
deps =
    flake8
    flake8-docstrings
    flake8-import-order
commands =
    flake8 src/aws_encryption_sdk/ setup.py

[testenv:flake8-tests]
basepython = {[testenv:flake8]basepython}
deps = 
    flake8
    flake8-import-order
commands =
    flake8 \
        # Ignore F811 redefinition errors in tests (breaks with pytest-mock use)
        --ignore F811 \
        test/

[testenv:flake8-examples]
basepython = {[testenv:flake8]basepython}
deps = {[testenv:flake8]deps}
commands =
    flake8 \
        # Examples should not treat any imports a application-local.
        --application-import-names= \
        examples/src/
    flake8 \
        # Examples should not treat any imports a application-local.
        --application-import-names= \
        # Ingore D103 missing docstring errors in tests (test names should be self-documenting)
        --ignore D103 \
        examples/test/

[testenv:pylint]
basepython = python3
deps =
    {[testenv]deps}
    pyflakes
    pylint
commands =
    pylint \
        --rcfile=pylintrc \
        src/aws_encryption_sdk/  \
        setup.py

[testenv:pylint-examples]
basepython = {[testenv:pylint]basepython}
deps = {[testenv:pylint]deps}
commands =
    pylint --rcfile=examples/src/pylintrc examples/src/
    pylint --rcfile=examples/test/pylintrc --disable R0801 examples/test/

[testenv:pylint-tests]
basepython = {[testenv:pylint]basepython}
deps = {[testenv:pylint]deps}
commands =
    pylint \
        --rcfile=test/pylintrc \
        test/unit/ \
        test/functional/ \
        test/integration/

[testenv:doc8]
basepython = python3
deps =
    sphinx
    doc8
commands = doc8 doc/index.rst README.rst CHANGELOG.rst CONTRIBUTING.rst

[testenv:readme]
basepython = python3
deps = readme_renderer
commands = python setup.py check -r -s

[testenv:bandit]
basepython = python3
deps = 
    # Pull bandit from github because they haven't published 1.4.1 to pypi yet
    git+git://github.com/openstack/bandit.git@master
commands = bandit -r src/aws_encryption_sdk/

# Prone to false positives: only run independently
[testenv:vulture]
basepython = python3
deps = vulture
commands = vulture src/aws_encryption_sdk/

[testenv:linters]
basepython = python3
deps =
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:doc8]deps}
    {[testenv:readme]deps}
    {[testenv:bandit]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:doc8]commands}
    {[testenv:readme]commands}
    {[testenv:bandit]commands}

[testenv:linters-tests]
basepython = python3
deps =
    {[testenv:flake8-tests]deps}
    {[testenv:pylint-tests]deps}
commands =
    {[testenv:flake8-tests]commands}
    {[testenv:pylint-tests]commands}

[testenv:linters-examples]
basepython = python3
deps =
    {[testenv:flake8-examples]deps}
    {[testenv:pylint-examples]deps}
commands =
    {[testenv:flake8-examples]commands}
    {[testenv:pylint-examples]commands}

# Documentation
[testenv:docs]
basepython = python3
deps = -rdoc/requirements.txt
commands =
    sphinx-build -E -c doc/ -b html doc/ doc/build/html

[testenv:serve-docs]
basepython = python3
skip_install = true
changedir = doc/build/html
deps =
commands =
    python -m http.server {posargs}

# Release tooling
[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py bdist_wheel

[testenv:test-release]
basepython = python3
skip_install = true
deps =
    {[testenv:build]deps}
    twine
commands =
    {[testenv:build]commands}
    twine upload --skip-existing --repository testpypi dist/*

[testenv:release]
basepython = python3
skip_install = true
deps =
    {[testenv:build]deps}
    twine
commands =
    {[testenv:build]commands}
    twine upload --skip-existing --repository pypi dist/*

# Flake8 Configuration
[flake8]
max_complexity = 10
max_line_length = 120
import_order_style = google
application_import_names = aws_encryption_sdk
builtins = raw_input
ignore =
    # Ignoring D205 and D400 because of false positives
    D205, D400,
    # Ignoring D401 pending discussion of imperative mood
    D401,
    # Ignoring W503 : line break before binary operator
    W503

# Doc8 Configuration
[doc8]
max-line-length = 120
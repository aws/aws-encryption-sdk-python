name: Continuous Integration tests

on:
  pull_request:
  push:
  # Run once a day
  schedule:
    - cron: '0 0 * * *'

env:
  AWS_ENCRYPTION_SDK_PYTHON_INTEGRATION_TEST_AWS_KMS_KEY_ID: |
    arn:aws:kms:us-west-2:658956600833:key/b3537ef1-d8dc-4780-9f5a-55776cbb2f7f
  AWS_ENCRYPTION_SDK_PYTHON_INTEGRATION_TEST_AWS_KMS_KEY_ID_2: |
    arn:aws:kms:eu-central-1:658956600833:key/75414c93-5285-4b57-99c9-30c1cf0a22c2
  AWS_ENCRYPTION_SDK_PYTHON_INTEGRATION_TEST_AWS_KMS_MRK_KEY_ID_1: |
    arn:aws:kms:us-west-2:658956600833:key/mrk-80bd8ecdcd4342aebd84b7dc9da498a7
  AWS_ENCRYPTION_SDK_PYTHON_INTEGRATION_TEST_AWS_KMS_MRK_KEY_ID_2: |
    arn:aws:kms:us-east-1:658956600833:key/mrk-80bd8ecdcd4342aebd84b7dc9da498a7

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python:
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
          - "3.11"
          - 3.x  # Ideally, we would skip if 3.x is 3.11
        architecture:
          - x64
          - x86
        category:
          - local
          - accept
# These require credentials.
# Enable them once we sort how to provide them.
#          - integ
#          - examples
        exclude:
          # x86 builds are only meaningful for Windows
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.architecture }}
      - run: |
          python -m pip install --upgrade pip
          pip install --upgrade -r dev_requirements/ci-requirements.txt
      - name: run test
        env:
          TOXENV: ${{ matrix.category }}
        run: tox -- -vv
  upstream-py37:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        category:
          - nocmk
          - test-upstream-requirements-py37
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-python@v4
          with:
            python-version: 3.7
        - run: |
            python -m pip install --upgrade pip
            pip install --upgrade -r dev_requirements/ci-requirements.txt
        - name: run test
          env:
            TOXENV: ${{ matrix.category }}
          run: tox -- -vv
  upstream-py311:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        category:
          - nocmk
          - test-upstream-requirements-py311
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-python@v4
          with:
            python-version: "3.11"
        - run: |
            python -m pip install --upgrade pip
            pip install --upgrade -r dev_requirements/ci-requirements.txt
        - name: run test
          env:
            TOXENV: ${{ matrix.category }}
          run: tox -- -vv
